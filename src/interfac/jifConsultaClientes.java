
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package interfac;

import com.aspose.cells.Workbook;
import com.aspose.cells.Worksheet;
import static interfac.jPrincipal.jTela;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelDAO.ConsultaDAO;
import java.sql.SQLException;
import java.sql.ResultSet;
import model.clientes;


/**
 *
 * @author User
 */
public class jifConsultaClientes extends javax.swing.JInternalFrame {
    
    clientes objpes = new clientes();
    clientes objpesR = new clientes();

    /**
     * Creates new form jifConsulta
     */
    public jifConsultaClientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jcTipo = new javax.swing.JComboBox<>();
        jlConsulta = new javax.swing.JLabel();
        jlInfo = new javax.swing.JLabel();
        jtInfo = new javax.swing.JTextField();
        jbCap = new javax.swing.JButton();
        jbFicha = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jbPesquisar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Consulta de Clientes");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod.", "Razão Social", "Apelido", "I.E", "CNPJ/CPF", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabela.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTabela.setAutoscrolls(false);
        jTabela.setRowHeight(25);
        jScrollPane1.setViewportView(jTabela);

        jcTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cod.", "Razão Social", "Apelido", "Cliente Mãe", "Inscrição Estadual", "CNPJ/CPF" }));

        jlConsulta.setText("Consulta por:");

        jlInfo.setText("Digite a informação:");

        jbCap.setText("Capturar");
        jbCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCapActionPerformed(evt);
            }
        });

        jbFicha.setText("Imprimir Ficha");
        jbFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFichaActionPerformed(evt);
            }
        });

        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtInfo))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbPesquisar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbCap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCap, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbFicha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSair)))
                        .addGap(0, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbCap, jbFicha, jbPesquisar, jbSair});

        setBounds(200, 0, 898, 468);
    }// </editor-fold>//GEN-END:initComponents

    private void jbCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCapActionPerformed
 
        int row =jTabela.getSelectedRow();
 
        if (jPrincipal.fichao==true){
     
        objpes.setId_clientes(Integer.parseInt(jTabela.getValueAt(row, 0).toString().trim()));
        
        jifFichao.recebeidFichao(objpes);
        
        objpesR.setPes_razaoS(String.valueOf(jTabela.getValueAt(row, 1)));
        jifFichao.recebeQmFatura1(objpesR);
        jifFichao.recebeQmFatura2(objpesR);
        jifFichao.recebeQmFatura3(objpesR);
        
            
        } else {              
        jifCadastro obj = new jifCadastro();
        jTela.add(obj);
        obj.setVisible(true);

        objpes.setId_clientes(Integer.parseInt(jTabela.getValueAt(row, 0).toString().trim()));
        
        jifCadastro.recebeidClientes(objpes);
        
       
  }
        
        dispose();
        
    }//GEN-LAST:event_jbCapActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
    
        
                jPrincipal.consultaClientes=false;
           dispose();
    }//GEN-LAST:event_jbSairActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
               jPrincipal.consultaClientes=true;
        
        DefaultTableModel mp1 = (DefaultTableModel) jTabela.getModel();
        
        int l = mp1.getRowCount(); //conta as linhas da tabela
        
        if(l>0)
        {
            while(l>0){
                ((DefaultTableModel) jTabela.getModel()).removeRow(l-1); // primeira linha tem valor 0
                l--;
            } //fim While
            
        } //fim do if - verifica se tem alguma info. na tabela
        
        try {
            
            
            //sem atgumento na pesquisa
            ResultSet rs = ConsultaDAO.carregaTabelaClientes();
            
            //instancia o objeto mp da classe DefaultTableModel
            DefaultTableModel mp = (DefaultTableModel) jTabela.getModel();
            
            while(rs.next()){
                
                //coleta os dados da linha no banco de dados
                String Coluna0=rs.getString("id_clientes").trim();
                String Coluna1=rs.getString("pes_razaoS").trim();
                String Coluna2=rs.getString("pes_apelido").trim();
                String Coluna3=rs.getString("pes_iE").trim();
                String Coluna4=rs.getString("pes_cnpj").trim();
                String status=rs.getString("pes_status").trim();
                String Coluna5="";
                
                if(status.equals("1")){
                    Coluna5="Ativo";
                }
                                if(status.equals("0")){
                    Coluna5="Inativo";
            }
                                //preenche a linha da JTable e volta para o while até terminar as linhas contidas
                                //na tabela do banco
                                mp.addRow(new String[]{Coluna0,Coluna1,Coluna2,Coluna3,Coluna4,Coluna5});
        }
        
        }
        catch(SQLException erro){
            JOptionPane.showMessageDialog(this, "Ocorreu um erro: "+ erro, "Preencher Item", 2);
        }
        
        tamanhocoluna();
        jTabela.setAutoCreateRowSorter(true); //ordena as linhas ao clicar na coluna
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
        jPrincipal.consultaClientes=false;
           dispose();
    }//GEN-LAST:event_formInternalFrameClosed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:
         DefaultTableModel mp1 = (DefaultTableModel) jTabela.getModel();
      
      int l=mp1.getRowCount();
      
      
      if(l>0){
          while(l>0){
                ((DefaultTableModel) jTabela.getModel()).removeRow(l-1); // primeira linha tem valor 0
                l--;
            } //fim While
            
        } //fim do if - verifica se tem alguma info. na tabela
      
      //fim limpa a tabela
        
        String tipo="";
      String escolha=jcTipo.getSelectedItem().toString().trim();
      
            if(escolha.equals("Cod.")){
          tipo=" "+"id_clientes";
            }
             if(escolha.equals("Razão Social")){
          tipo=" "+"pes_razaoS";
      }      if(escolha.equals("Apelido")){
          tipo=" "+"pes_apelido";
      }       if(escolha.equals("Inscrição Estadual")){
          tipo=" "+"pes_iE";
      }      if(escolha.equals("CNPJ/CPF")){
          tipo=" "+"pes_cnpj";
      }         
      String arg=jtInfo.getText();
      
      

        
        
      try{
          ResultSet rs = ConsultaDAO.carregaTelaClientes(tipo, arg);
          
           DefaultTableModel mp = (DefaultTableModel) jTabela.getModel();
            
            while(rs.next()){
                
                //coleta os dados da linha no banco de dados
                String Coluna0=rs.getString("id_clientes").trim();
                String Coluna1=rs.getString("pes_razaoS").trim();
                String Coluna2=rs.getString("pes_apelido").trim();
                String Coluna3=rs.getString("pes_iE").trim();
                String Coluna4=rs.getString("pes_cnpj").trim();
                String status=rs.getString("pes_status").trim();
                String Coluna5="";
                
                if(status.equals("1")){
                    Coluna5="Ativo";
                }
                                if(status.equals("0")){
                    Coluna5="Inativo";
            }
                                
                                
          mp.addRow(new String[]{Coluna0,Coluna1,Coluna2,Coluna3,Coluna4,Coluna5});
          
          
          
      }
        
      } catch (SQLException error){
          JOptionPane.showMessageDialog(this, "Ocorreu um erro: "+ error, "Preencher Item", 2);
      }
      
      tamanhocoluna();
        jTabela.setAutoCreateRowSorter(true); //ordena as linhas ao clicar na coluna

        
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFichaActionPerformed
    /*    // TODO add your handling code here:
        Workbook workbook = new Workbook();

        // Obtendo a referência da planilha
        Worksheet worksheet = workbook.getWorksheets().get(0);
       */ 
        
      
    }//GEN-LAST:event_jbFichaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabela;
    private javax.swing.JButton jbCap;
    private javax.swing.JButton jbFicha;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSair;
    private javax.swing.JComboBox<String> jcTipo;
    private javax.swing.JLabel jlConsulta;
    private javax.swing.JLabel jlInfo;
    private javax.swing.JTextField jtInfo;
    // End of variables declaration//GEN-END:variables

 public void tamanhocoluna(){
jTabela.getColumnModel().getColumn(0).setPreferredWidth(60);
jTabela.getColumnModel().getColumn(1).setPreferredWidth(250);
jTabela.getColumnModel().getColumn(2).setPreferredWidth(150);
jTabela.getColumnModel().getColumn(3).setPreferredWidth(90);
jTabela.getColumnModel().getColumn(4).setPreferredWidth(130);
jTabela.getColumnModel().getColumn(5).setPreferredWidth(60);
}//dimensionar tabela


}